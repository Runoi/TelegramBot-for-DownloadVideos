from aiogram.types import Message, BufferedInputFile
from services.instagram import InstagramDownloader
from config import DOWNLOAD_DIR
from pathlib import Path
import logging

logger = logging.getLogger(__name__)
downloader = InstagramDownloader()

async def handle_instagram(message: Message, url: str):
    """–û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è Instagram"""
    try:
        content = await downloader.download_content(url)
        if not content['media']:
            await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç")
            return

        for file in content['media']:
            if Path(file).exists():
                await send_media(message, file)
                Path(file).unlink()

        if content.get('text'):
            await message.answer(f"üìù –¢–µ–∫—Å—Ç –ø–æ—Å—Ç–∞:\n{content['text']}")

    except Exception as e:
        logger.error(f"Error: {e}")
        await message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏")

async def send_media(message: Message, path: str):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –º–µ–¥–∏–∞"""
    with open(path, 'rb') as f:
        data = f.read()
        if path.endswith('.mp4'):
            await message.answer_video(BufferedInputFile(data, "video.mp4"))
        else:
            await message.answer_photo(BufferedInputFile(data, "photo.jpg"))